plan:
  id: MVP-DEMO
  summary: "Prove judge-gated phases with tests+docs."
  base_branch: "main"

  # Test command (optional, defaults to "pytest tests/ -v")
  test_command: "pytest tests/ -v"

  # Lint command (optional, defaults to "ruff check .")
  lint_command: "ruff check ."

  # LLM review configuration (optional, applies when llm_review gate is enabled)
  llm_review_config:
    model: "claude-sonnet-4-20250514"
    max_tokens: 2000
    temperature: 0
    timeout_seconds: 60
    budget_usd: null  # Set to limit costs (e.g., 0.50)
    fail_on_transport_error: false  # Set true for strict validation
    include_extensions: [".py"]  # File extensions to review
    exclude_patterns: []  # Patterns to skip (e.g., "**/test_*.py")

  # Protocol integrity enforcement
  protocol_lock:
    protected_globs:
      - "tools/**"
      - ".repo/plan.yaml"
      - ".repo/protocol_manifest.json"
    allow_in_phases:
      - "P00-protocol-maintenance"

  phases:
    - id: P01-scaffold
      description: "Create skeleton module + golden test + docs."
      scope:
        include: ["src/mvp/**", "tests/mvp/**", "docs/mvp.md"]
        exclude: ["src/**/legacy/**"]
      artifacts:
        must_exist: ["src/mvp/__init__.py", "tests/mvp/test_golden.py", "docs/mvp.md"]
      gates:
        tests: { must_pass: true }
        lint:  { must_pass: true }
        docs:  { must_update: ["docs/mvp.md"] }
        drift:
          allowed_out_of_scope_changes: 0
      drift_rules:
        forbid_changes: ["requirements.txt", "pyproject.toml"]

    - id: P02-impl-feature
      description: "Implement simple feature with refactor + doc section."
      scope:
        include: ["src/mvp/feature.py", "tests/mvp/test_feature.py", "docs/mvp.md"]
      artifacts:
        must_exist: ["src/mvp/feature.py", "tests/mvp/test_feature.py"]
      gates:
        tests: { must_pass: true }
        lint:  { must_pass: true }
        docs:  { must_update: ["docs/mvp.md#feature"] }
        llm_review: { enabled: true }
        drift:
          allowed_out_of_scope_changes: 0
      drift_rules:
        forbid_changes: ["requirements.txt", "pyproject.toml", ".github/**"]
